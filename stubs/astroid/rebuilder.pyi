# Stubs for astroid.rebuilder (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

CONST_NAME_TRANSFORMS: Any
REDIRECT: Any
PY3: Any
PY34: Any
PY37: Any

class TreeRebuilder:
    def __init__(self, manager: Any, parse_python_two: bool=...) -> Any: ...
    def visit_module(self, node: Any, modname: Any, modpath: Any, package: Any): ...
    def visit(self, node: Any, parent: Any): ...
    def visit_arguments(self, node: Any, parent: Any): ...
    def visit_assert(self, node: Any, parent: Any): ...
    def check_type_comment(self, node: Any): ...
    def check_function_type_comment(self, node: Any): ...
    def visit_assign(self, node: Any, parent: Any): ...
    def visit_assignname(self, node: Any, parent: Any, node_name: Optional[Any] = ...): ...
    def visit_augassign(self, node: Any, parent: Any): ...
    def visit_repr(self, node: Any, parent: Any): ...
    def visit_binop(self, node: Any, parent: Any): ...
    def visit_boolop(self, node: Any, parent: Any): ...
    def visit_break(self, node: Any, parent: Any): ...
    def visit_call(self, node: Any, parent: Any): ...
    def visit_classdef(self, node: Any, parent: Any, newstyle: Optional[Any] = ...): ...
    def visit_const(self, node: Any, parent: Any): ...
    def visit_continue(self, node: Any, parent: Any): ...
    def visit_compare(self, node: Any, parent: Any): ...
    def visit_comprehension(self, node: Any, parent: Any): ...
    def visit_decorators(self, node: Any, parent: Any): ...
    def visit_delete(self, node: Any, parent: Any): ...
    def visit_dict(self, node: Any, parent: Any): ...
    def visit_dictcomp(self, node: Any, parent: Any): ...
    def visit_expr(self, node: Any, parent: Any): ...
    def visit_ellipsis(self, node: Any, parent: Any): ...
    def visit_emptynode(self, node: Any, parent: Any): ...
    def visit_excepthandler(self, node: Any, parent: Any): ...
    def visit_exec(self, node: Any, parent: Any): ...
    def visit_extslice(self, node: Any, parent: Any): ...
    def visit_for(self, node: Any, parent: Any): ...
    def visit_importfrom(self, node: Any, parent: Any): ...
    def visit_functiondef(self, node: Any, parent: Any): ...
    def visit_generatorexp(self, node: Any, parent: Any): ...
    def visit_attribute(self, node: Any, parent: Any): ...
    def visit_global(self, node: Any, parent: Any): ...
    def visit_if(self, node: Any, parent: Any): ...
    def visit_ifexp(self, node: Any, parent: Any): ...
    def visit_import(self, node: Any, parent: Any): ...
    def visit_index(self, node: Any, parent: Any): ...
    def visit_keyword(self, node: Any, parent: Any): ...
    def visit_lambda(self, node: Any, parent: Any): ...
    def visit_list(self, node: Any, parent: Any): ...
    def visit_listcomp(self, node: Any, parent: Any): ...
    def visit_name(self, node: Any, parent: Any): ...
    def visit_constant(self, node: Any, parent: Any): ...
    def visit_str(self, node: Any, parent: Any): ...
    visit_bytes: Any = ...
    def visit_num(self, node: Any, parent: Any): ...
    def visit_pass(self, node: Any, parent: Any): ...
    def visit_print(self, node: Any, parent: Any): ...
    def visit_raise(self, node: Any, parent: Any): ...
    def visit_return(self, node: Any, parent: Any): ...
    def visit_set(self, node: Any, parent: Any): ...
    def visit_setcomp(self, node: Any, parent: Any): ...
    def visit_slice(self, node: Any, parent: Any): ...
    def visit_subscript(self, node: Any, parent: Any): ...
    def visit_tryexcept(self, node: Any, parent: Any): ...
    def visit_tryfinally(self, node: Any, parent: Any): ...
    def visit_tuple(self, node: Any, parent: Any): ...
    def visit_unaryop(self, node: Any, parent: Any): ...
    def visit_while(self, node: Any, parent: Any): ...
    def visit_with(self, node: Any, parent: Any): ...
    def visit_yield(self, node: Any, parent: Any): ...

class TreeRebuilder3(TreeRebuilder):
    def visit_arg(self, node: Any, parent: Any): ...
    def visit_nameconstant(self, node: Any, parent: Any): ...
    def visit_excepthandler(self, node: Any, parent: Any): ...
    def visit_nonlocal(self, node: Any, parent: Any): ...
    def visit_raise(self, node: Any, parent: Any): ...
    def visit_starred(self, node: Any, parent: Any): ...
    def visit_try(self, node: Any, parent: Any): ...
    def visit_annassign(self, node: Any, parent: Any): ...
    def visit_with(self, node: Any, parent: Any): ...
    def visit_yieldfrom(self, node: Any, parent: Any): ...
    def visit_classdef(self, node: Any, parent: Any, newstyle: bool = ...): ...
    def visit_asyncfunctiondef(self, node: Any, parent: Any): ...
    def visit_asyncfor(self, node: Any, parent: Any): ...
    def visit_await(self, node: Any, parent: Any): ...
    def visit_asyncwith(self, node: Any, parent: Any): ...
    def visit_joinedstr(self, node: Any, parent: Any): ...
    def visit_formattedvalue(self, node: Any, parent: Any): ...
TreeRebuilder = TreeRebuilder3
