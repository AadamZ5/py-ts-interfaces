# Stubs for astroid.protocols (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

raw_building: Any
objects: Any
BIN_OP_METHOD: Any
REFLECTED_BIN_OP_METHOD: Any
AUGMENTED_OP_METHOD: Any
UNARY_OP_METHOD: Any
BIN_OP_IMPL: Any

def const_infer_binary_op(self, opnode: Any, operator: Any, other: Any, context: Any, _: Any) -> None: ...
def tl_infer_binary_op(self, opnode: Any, operator: Any, other: Any, context: Any, method: Any) -> None: ...
def instance_class_infer_binary_op(self, opnode: Any, operator: Any, other: Any, context: Any, method: Any): ...
def for_assigned_stmts(self, node: Optional[Any] = ..., context: Optional[Any] = ..., assign_path: Optional[Any] = ...): ...
def sequence_assigned_stmts(self, node: Optional[Any] = ..., context: Optional[Any] = ..., assign_path: Optional[Any] = ...): ...
def assend_assigned_stmts(self, node: Optional[Any] = ..., context: Optional[Any] = ..., assign_path: Optional[Any] = ...): ...
def arguments_assigned_stmts(self, node: Optional[Any] = ..., context: Optional[Any] = ..., assign_path: Optional[Any] = ...): ...
def assign_assigned_stmts(self, node: Optional[Any] = ..., context: Optional[Any] = ..., assign_path: Optional[Any] = ...): ...
def assign_annassigned_stmts(self, node: Optional[Any] = ..., context: Optional[Any] = ..., assign_path: Optional[Any] = ...) -> None: ...
def excepthandler_assigned_stmts(self, node: Optional[Any] = ..., context: Optional[Any] = ..., assign_path: Optional[Any] = ...): ...
def with_assigned_stmts(self, node: Optional[Any] = ..., context: Optional[Any] = ..., assign_path: Optional[Any] = ...): ...
def starred_assigned_stmts(self, node: Optional[Any] = ..., context: Optional[Any] = ..., assign_path: Optional[Any] = ...) -> None: ...
