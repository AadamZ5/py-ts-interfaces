# Stubs for astroid.modutils (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .interpreter._import import spec, util
from typing import Any, Optional

PY_SOURCE_EXTS: Any
PY_COMPILED_EXTS: Any
STD_LIB_DIRS: Any
prefix: Any
EXT_LIB_DIR: Any
IS_JYTHON: Any
BUILTIN_MODULES: Any

class NoSourceFile(Exception): ...

def load_module_from_name(dotted_name: Any, path: Optional[Any] = ..., use_sys: bool = ...): ...
def load_module_from_modpath(parts: Any, path: Optional[Any] = ..., use_sys: int = ...): ...
def load_module_from_file(filepath: Any, path: Optional[Any] = ..., use_sys: bool = ..., extrapath: Optional[Any] = ...): ...
def check_modpath_has_init(path: Any, mod_path: Any): ...
def modpath_from_file_with_callback(filename: Any, extrapath: Optional[Any] = ..., is_package_cb: Optional[Any] = ...): ...
def modpath_from_file(filename: Any, extrapath: Optional[Any] = ...): ...
def file_from_modpath(modpath: Any, path: Optional[Any] = ..., context_file: Optional[Any] = ...): ...
def file_info_from_modpath(modpath: Any, path: Optional[Any] = ..., context_file: Optional[Any] = ...): ...
def get_module_part(dotted_name: Any, context_file: Optional[Any] = ...): ...
def get_module_files(src_directory: Any, blacklist: Any, list_all: bool = ...): ...
def get_source_file(filename: Any, include_no_ext: bool = ...): ...
def is_python_source(filename: Any): ...
def is_standard_module(modname: Any, std_path: Optional[Any] = ...): ...
def is_relative(modname: Any, from_file: Any): ...
def is_namespace(specobj: Any): ...
def is_directory(specobj: Any): ...
